@model ShredKernal.ViewModels.UploadCourseFileViewModel

@{
    ViewData["Title"] = "UploadFile";
}

<link rel="stylesheet" href="~/css/upload.css" />



<h1>UploadFile</h1>
<a class="btn btn-info float-start" asp-action="Index">Get Courses </a>

<div class="upload">
    <form class="uploadForm" enctype="multipart/form-data" asp-controller="HomeWork" asp-action="UploadFile">
        <div class="form-group ">
            <label asp-for="LevelId" class="form-label mt-4">Select Level </label>
            <select asp-for="LevelId" asp-items="@(new SelectList(Model.Levels,"Id","LevelName"))" class="form-select">
                <option></option>

            </select>
        </div>


        <div class="form-group ">
            <label asp-for="@Model.CtegoryName" class="form-label mt-4 float-left">Course Name</label>
            <input asp-for="@Model.CtegoryName" type="text" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" placeholder="Enter email">
            <span asp-validation-for="@Model.CtegoryName" class="text-danger"></span>

        </div>
        <div class="form-group">
            <label asp-for="@Model.File" class="form-label mt-4 float-left">Upload File</label>
            <input asp-for="@Model.File" class="form-control custom-file-input" type="file" name="file" id="formFile">
        </div>
        <button type="submit"
                class="btn btn-primary float-left mt-3">
            Submit
        </button>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        //while uploading file it used to bind file name to the lable selector
        $(document).ready(function () {
            $('.custom-file-input').on("change", function () {
                var fileName = $(this).val().split("\\").pop();
                $(this).next('.custom-file-label').html(fileName);
            });
        });
    </script>


}
